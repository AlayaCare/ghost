import{_ as i,c as a,o as n,ae as t}from"./chunks/framework.C0FZg82U.js";const E=JSON.parse('{"title":"How to install and use","description":"","frontmatter":{},"headers":[],"relativePath":"installation.md","filePath":"installation.md"}'),e={name:"installation.md"};function l(p,s,h,k,r,d){return n(),a("div",null,s[0]||(s[0]=[t(`<h1 id="how-to-install-and-use" tabindex="-1">How to install and use <a class="header-anchor" href="#how-to-install-and-use" aria-label="Permalink to &quot;How to install and use&quot;">​</a></h1><p>You need to:</p><ul><li><a href="#1-creating-the-goliac-github-app">1. create the Goliac GitHub App (and point it to the server)</a></li><li><a href="#2-creating-the-iac-github-repository">2. create the IAC github repository (with the GitHub actions associated) or clone the example repository</a></li><li><a href="#3-configure-the-goliac-server">3. deploy the server somewhere (and configure it)</a></li></ul><p>Optionally, you can:</p><ul><li><a href="#optional-syncing-users-from-an-external-source">Sync Users from an external source</a></li><li><a href="#optional-slack-integration">Add the Slack integration</a></li><li><a href="#optional-github-webhook">Configure a GitHub webhook</a></li></ul><h2 id="_1-creating-the-goliac-github-app" tabindex="-1">1. Creating the Goliac GitHub App <a class="header-anchor" href="#_1-creating-the-goliac-github-app" aria-label="Permalink to &quot;1. Creating the Goliac GitHub App&quot;">​</a></h2><p>Note: if you want an more restricted Github app, see <a href="./security.html#security-hardening">Security hardening</a></p><p>In GitHub:</p><ul><li>Register new GitHub App <ul><li>in your profile settings, go to <code>Developer settings</code>/<code>GitHub Apps</code></li><li>Click on <code>New GitHub App</code></li></ul></li><li>Give basic information: <ul><li>GitHub App name can be <code>&lt;yourorg&gt;-goliac-app</code> (it will be used in the rulesets later)</li><li>Homepage URL can be <code>https://github.com/Alayacare/goliac</code></li><li>Disable the active Webhook</li></ul></li><li>Under Organization permissions <ul><li>Give Read/Write access to <code>Administration</code></li><li>Give Read/Write access to <code>Members</code></li></ul></li><li>Under Repository permissions <ul><li>Give Read/Write access to <code>Administration</code></li><li>Give Read/Write access to <code>Content</code></li></ul></li><li>Where can this GitHub App be installed: <code>Only on this account</code></li><li>And Create</li><li>then you must <ul><li>collect the AppID</li><li>Generate (and collect) a private key (file)</li></ul></li><li>Go to the left tab &quot;Install App&quot; <ul><li>Click on &quot;Install&quot;</li></ul></li></ul><h2 id="_2-creating-the-iac-github-repository" tabindex="-1">2. Creating the IAC github repository <a class="header-anchor" href="#_2-creating-the-iac-github-repository" aria-label="Permalink to &quot;2. Creating the IAC github repository&quot;">​</a></h2><p>In your GitHub organization, you need to create a git repository. Usually it is called <code>goliac-teams</code>.</p><p>You have different way to initialize it.</p><h3 id="manual-initialization" tabindex="-1">Manual initialization <a class="header-anchor" href="#manual-initialization" aria-label="Permalink to &quot;Manual initialization&quot;">​</a></h3><p>You can check <a href="https://github.com/goliac-project/goliac-teams" target="_blank" rel="noreferrer">https://github.com/goliac-project/goliac-teams</a> as an example</p><p>You need the following structure:</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>/</span></span>
<span class="line"><span>├─ goliac.yaml</span></span>
<span class="line"><span>├─ rulesets/</span></span>
<span class="line"><span>│  ├─ &lt;rulesetname&gt;.yaml</span></span>
<span class="line"><span>│  ...</span></span>
<span class="line"><span>├─ archived/</span></span>
<span class="line"><span>├─ users/</span></span>
<span class="line"><span>│ ├─ org/</span></span>
<span class="line"><span>│ │ ├─ &lt;user&gt;.yaml</span></span>
<span class="line"><span>│ │ ...</span></span>
<span class="line"><span>│ └─ protected/</span></span>
<span class="line"><span>│   ├─ &lt;user&gt;.yaml</span></span>
<span class="line"><span>│   ...</span></span>
<span class="line"><span>└─ teams/</span></span>
<span class="line"><span>   ├─ &lt;teamname&gt;/</span></span>
<span class="line"><span>   │ ├─ team.yaml</span></span>
<span class="line"><span>   │ ├─ &lt;reponame&gt;.yaml</span></span>
<span class="line"><span>   │ ├─ &lt;reponame&gt;.yaml</span></span>
<span class="line"><span>   │  ...</span></span>
<span class="line"><span>   ├─ &lt;teamame&gt;/</span></span>
<span class="line"><span>   │ ├─ &lt;team.yaml</span></span>
<span class="line"><span>   │ ├─ &lt;reponame&gt;.yaml</span></span>
<span class="line"><span>   │ ├─ ...</span></span>
<span class="line"><span>   │ └─ &lt;subteamname&gt;/</span></span>
<span class="line"><span>   │   ├─ &lt;team.yaml</span></span>
<span class="line"><span>   │   ├─ &lt;reponame&gt;.yaml</span></span>
<span class="line"><span>   │   ...</span></span>
<span class="line"><span>   ├─ &lt;teamame&gt;/</span></span>
<span class="line"><span>   │ └─ team.yaml</span></span>
<span class="line"><span>   │ ...</span></span>
<span class="line"><span>   ...</span></span></code></pre></div><h3 id="assisted-initialization" tabindex="-1">Assisted initialization <a class="header-anchor" href="#assisted-initialization" aria-label="Permalink to &quot;Assisted initialization&quot;">​</a></h3><p>You will need the goliac binary:</p><div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">curl</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -o</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> goliac</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -L</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> https://github.com/Alayacare/goliac/releases/latest/download/goliac-\`</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">uname</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -s</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">\`</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">-</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">\`</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">uname</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -m</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">\`</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> &amp;&amp; </span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">chmod</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> +x</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> goliac</span></span></code></pre></div><p>You will need as well to have created an admin team in your Github organization (in our example, the team is called <code>goliac-admin</code> ).</p><p>And now you can use the goliac application to assist you:</p><div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">export</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> GOLIAC_GITHUB_APP_ID</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=&lt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">appid</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">export</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> GOLIAC_GITHUB_APP_PRIVATE_KEY_FILE</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=&lt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">private key filename</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">export</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> GOLIAC_GITHUB_APP_ORGANIZATION</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=&lt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">your github organization</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">./goliac</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> scaffold</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> &lt;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">director</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">y</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&gt;</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> &lt;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">goliac-admin</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> team</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> you</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> want</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> to</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> creat</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">e</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&gt;</span></span></code></pre></div><p>So something like</p><div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">mkdir</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> goliac-teams</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">export</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> GOLIAC_GITHUB_APP_ID</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">355525</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">export</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> GOLIAC_GITHUB_APP_PRIVATE_KEY_FILE</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">goliac-project-app.2023-07-03.private-key.pem</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">export</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> GOLIAC_GITHUB_APP_ORGANIZATION</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">goliac-project</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">./goliac</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> scaffold</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> goliac-teams</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> goliac-admin</span></span></code></pre></div><p>The application will connect to your GitHub organization and will try to guess</p><ul><li>your users</li><li>your teams</li><li>the repos associated with your teams</li></ul><p>And it will create the corresponding structure into the &quot;goliac-teams&quot; directory</p><h3 id="the-goliac-yaml-configuration-file" tabindex="-1">the goliac.yaml configuration file <a class="header-anchor" href="#the-goliac-yaml-configuration-file" aria-label="Permalink to &quot;the goliac.yaml configuration file&quot;">​</a></h3><p>To make Goliac working you can configure the <code>/goliac.yaml</code> file</p><div class="language-yaml vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">yaml</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">admin_team</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">goliac-admin</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> # the name of the team (in the \`/teams\` directory ) that can admin this repository</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">everyone_team_enabled</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">false</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> # if you want all members to have read access to all repositories</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">rulesets</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># if you want to have organization-wide enforced rules (see the /rulesets directory)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  - </span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">pattern</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">.*</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">    ruleset</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">default</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">max_changesets</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">50</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> # protection measure: how many changes Goliac can do at once before considering that suspicious</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">archive_on_delete</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">true</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> # allow to not delete directly repository, but archive them first. (only usefull if destructive_operations.repository = true. See below)</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">destructive_operations</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">  repositories</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">false</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> # can Goliac remove repositories not listed in this repository</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">  teams</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">false</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">        # can Goliac remove teams not listed in this repository</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">  users</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">false</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">        # can Goliac remove users not listed in this repository</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">  rulesets</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">false</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">     # can Goliac remove rulesets not listed in this repository</span></span></code></pre></div><p>and you can configure different ruleset in the <code>/rulesets</code> directory like</p><div class="language-yaml vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">yaml</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">apiVersion</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">v1</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">kind</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">Ruleset</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">name</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">default</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">spec</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">  enforcement</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">evaluate</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> # can be disable, active or evaluate</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">  bypassapps</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    - </span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">appname</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">goliac-project-app</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">      mode</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">always</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> # always or pull_request</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  on</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">    include</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">      - </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;~DEFAULT_BRANCH&quot;</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> # it can be ~ALL,~DEFAULT_BRANCH, or branch name</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">  rules</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    - </span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">ruletype</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">pull_request</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> # currently supported: pull_request, required_signatures,required_status_checks</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">      parameters</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">        requiredApprovingReviewCount</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">1</span></span></code></pre></div><h3 id="testing-your-iac-github-repository" tabindex="-1">Testing your IAC github repository <a class="header-anchor" href="#testing-your-iac-github-repository" aria-label="Permalink to &quot;Testing your IAC github repository&quot;">​</a></h3><p>Before commiting your new structure you can use <code>goliac verify &lt;path to teams repo&gt;</code> to test the validity:</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>goliac verify goliac-teams/</span></span></code></pre></div><h3 id="applying-manually" tabindex="-1">Applying manually <a class="header-anchor" href="#applying-manually" aria-label="Permalink to &quot;Applying manually&quot;">​</a></h3><p>After merging your team IAC goliac-teams repository, you can begin to test and apply</p><div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">export</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> GOLIAC_GITHUB_APP_ID</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">355525</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">export</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> GOLIAC_GITHUB_APP_PRIVATE_KEY_FILE</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">goliac-project-app.2023-07-03.private-key.pem</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">export</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> GOLIAC_GITHUB_APP_ORGANIZATION</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">goliac-project</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">export</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> GOLIAC_SERVER_GIT_REPOSITORY</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">https://github.com/goliac-project/goliac-teams</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">./goliac</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> plan</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --repository</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> https://github.com/goliac-project/goliac-teams</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --branch</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> main</span></span></code></pre></div><p>and you can apply the change &quot;manually&quot;</p><div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">export</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> GOLIAC_GITHUB_APP_ID</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">355525</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">export</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> GOLIAC_GITHUB_APP_PRIVATE_KEY_FILE</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">goliac-project-app.2023-07-03.private-key.pem</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">export</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> GOLIAC_GITHUB_APP_ORGANIZATION</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">goliac-project</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">export</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> GOLIAC_SERVER_GIT_REPOSITORY</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">https://github.com/goliac-project/goliac-teams</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">./goliac</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> apply</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --repository</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> https://github.com/goliac-project/goliac-teams</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --branch</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> main</span></span></code></pre></div><p>If it works for you, you can put in place the goliac service to fetch and apply automatically (like every 10 minute). See below</p><h3 id="the-goliac-application" tabindex="-1">The goliac application <a class="header-anchor" href="#the-goliac-application" aria-label="Permalink to &quot;The goliac application&quot;">​</a></h3><p>By using the standalone application, goliac comes with different commands</p><table tabindex="0"><thead><tr><th>Command</th><th>Description</th></tr></thead><tbody><tr><td>scaffold</td><td>help you bootstrap an IAC structure, based on your current GitHub organization</td></tr><tr><td>verify</td><td>check the validity of a local IAC structure. Used for the CI (for example) to valiate a PR</td></tr><tr><td>plan</td><td>download a goliac teams IAC repository, and show changes to apply</td></tr><tr><td>apply</td><td>download a goliac teams IAC repository, and apply it to GitHub</td></tr><tr><td>serve</td><td>starts a server (and a UI) and apply automaticall every 10 minutes</td></tr><tr><td>syncusers</td><td>get the definition of users outside and put it back to the IAC structure</td></tr></tbody></table><h2 id="_3-configure-the-goliac-server" tabindex="-1">3. Configure the Goliac server <a class="header-anchor" href="#_3-configure-the-goliac-server" aria-label="Permalink to &quot;3. Configure the Goliac server&quot;">​</a></h2><p>You can run the goliac server as a service or a docker container. It needs several environment variables:</p><table tabindex="0"><thead><tr><th>Environment variable</th><th>Default</th><th>Description</th></tr></thead><tbody><tr><td>GOLIAC_LOGRUS_LEVEL</td><td>info</td><td>debug,info,warning or error</td></tr><tr><td>GOLIAC_LOGRUS_FORMAT</td><td>text</td><td>text or json</td></tr><tr><td>GOLIAC_GITHUB_SERVER</td><td><a href="https://api.github.com" target="_blank" rel="noreferrer">https://api.github.com</a></td><td></td></tr><tr><td>GOLIAC_GITHUB_APP_ORGANIZATION</td><td></td><td>(mandatory) name of your github org</td></tr><tr><td>GOLIAC_GITHUB_APP_ID</td><td></td><td>(mandatory) app id of Goliac GitHub App</td></tr><tr><td>GOLIAC_GITHUB_APP_PRIVATE_KEY_FILE</td><td></td><td>(mandatory) path to private key</td></tr><tr><td>GOLIAC_GITHUB_TEAM_APP_ID</td><td></td><td>(optional) dedicated app id of Goliac GitHub App for goliac teams repo (see security.md)</td></tr><tr><td>GOLIAC_GITHUB_TEAM_APP_PRIVATE_KEY_FILE</td><td></td><td>(optional) dedicated path to private key for goliac teams repo (see security.md)</td></tr><tr><td>GOLIAC_EMAIL</td><td><a href="mailto:goliac@alayacare.com" target="_blank" rel="noreferrer">goliac@alayacare.com</a></td><td>author name used by Goliac to commit (Codeowners)</td></tr><tr><td>GOLIAC_GITHUB_CONCURRENT_THREADS</td><td>5</td><td>You can increase, like &#39;10&#39;</td></tr><tr><td>GOLIAC_GITHUB_CACHE_TTL</td><td>86400</td><td>GitHub remote cache seconds retention</td></tr><tr><td>GOLIAC_SERVER_APPLY_INTERVAL</td><td>600</td><td>How often (seconds) Goliac try to apply</td></tr><tr><td>GOLIAC_SERVER_GIT_REPOSITORY</td><td></td><td>(mandatory) goliac teams repo name in your organization</td></tr><tr><td>GOLIAC_SERVER_GIT_BRANCH</td><td>main</td><td>goliac teams repo default branch name to use</td></tr><tr><td>GOLIAC_SERVER_HOST</td><td>localhost</td><td>it is set as <code>0.0.0.0</code> in the Dockerfile</td></tr><tr><td>GOLIAC_SERVER_PORT</td><td>18000</td><td></td></tr><tr><td>GOLIAC_SERVER_PR_REQUIRED_CHECK</td><td>validate</td><td>ci check to enforce when evaluating a PR (used for CI mode)</td></tr><tr><td>GOLIAC_MAX_CHANGESETS_OVERRIDE</td><td>false</td><td>if you need to override the <code>max_changesets</code> setting in the <code>goliac.yaml</code> file. Useful in particular using the <code>goliac apply</code> CLI</td></tr><tr><td>GOLIAC_SYNC_USERS_BEFORE_APPLY</td><td>true</td><td>to sync users before applying the changes</td></tr><tr><td>GOLIAC_SLACK_TOKEN</td><td></td><td>(optional) Slack token to send notification (ususally error messages if any)</td></tr><tr><td>GOLIAC_SLACK_CHANNEL</td><td></td><td>(optional) Slack channel to send notification</td></tr><tr><td>GOLIAC_GITHUB_WEBHOOK_HOST</td><td>0.0.0.0</td><td>(optional) Hostname to listen to GitHub webhook</td></tr><tr><td>GOLIAC_GITHUB_WEBHOOK_PORT</td><td>18001</td><td>(optional) Port to listen to GitHub webhook</td></tr><tr><td>GOLIAC_GITHUB_WEBHOOK_SECRET</td><td></td><td>(optional) Secret to validate GitHub webhook</td></tr><tr><td>GOLIAC_GITHUB_WEBHOOK_PATH</td><td>/webhook</td><td>(optional) Path to listen to GitHub webhook</td></tr><tr><td>then you just need to start it with</td><td></td><td></td></tr></tbody></table><div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">export</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> GOLIAC_GITHUB_APP_ID</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">355525</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">export</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> GOLIAC_GITHUB_APP_PRIVATE_KEY_FILE</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">goliac-project-app.2023-07-03.private-key.pem</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">export</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> GOLIAC_GITHUB_APP_ORGANIZATION</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">goliac-project</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">export</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> GOLIAC_SERVER_GIT_REPOSITORY</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">https://github.com/goliac-project/goliac-teams</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">./goliac</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> serve</span></span></code></pre></div><p>You can connect (eventually) to the UI for some statistic to <code>http://GOLIAC_SERVER_HOST:GOLIAC_SERVER_PORT</code></p><h3 id="using-docker-container" tabindex="-1">Using docker container <a class="header-anchor" href="#using-docker-container" aria-label="Permalink to &quot;Using docker container&quot;">​</a></h3><div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">docker</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> run</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -ti</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -v</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> \`</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">pwd</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">\`</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">/goliac-project-app.2023-07-03.private-key.pem:/app/private-key.pem</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -e</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> GOLIAC_GITHUB_APP_ID=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">355525</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -e</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> GOLIAC_GITHUB_APP_PRIVATE_KEY_FILE=/app/private-key.pem</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -e</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> GOLIAC_GITHUB_APP_ORGANIZATION=goliac-project</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -e</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> GOLIAC_SERVER_GIT_REPOSITORY=https://github.com/goliac-project/goliac-teams</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -e</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> GOLIAC_SERVER_HOST=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">0.0.0.0</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -p</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> 18000:18000</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> ghcr.io/nzin/goliac</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> serve</span></span></code></pre></div><h3 id="using-docker-compose" tabindex="-1">Using docker-compose <a class="header-anchor" href="#using-docker-compose" aria-label="Permalink to &quot;Using docker-compose&quot;">​</a></h3><div class="language-yaml vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">yaml</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">services</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">    goliac</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">        volumes</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">            - </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">./goliac-project-app.2023-07-03.private-key.pem:/app/private-key.pem&quot;</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">        environment</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">            - </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">GOLIAC_GITHUB_APP_ID=355525</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">            - </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">GOLIAC_GITHUB_APP_PRIVATE_KEY_FILE=/app/private-key.pem</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">            - </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">GOLIAC_GITHUB_APP_ORGANIZATION=goliac-project</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">            - </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">GOLIAC_SERVER_GIT_REPOSITORY=https://github.com/goliac-project/goliac-teams</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">            - </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">GOLIAC_SERVER_HOST=0.0.0.0</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">        ports</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">            - </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">18000:18000</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">        image</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">ghcr.io/nzin/goliac</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">        command</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">serve</span></span></code></pre></div><h3 id="using-kubernetes" tabindex="-1">Using kubernetes <a class="header-anchor" href="#using-kubernetes" aria-label="Permalink to &quot;Using kubernetes&quot;">​</a></h3><p>You can deploy the goliac server in a kubernetes cluster. You can use the <code>k8s/goliac-deployment.yaml</code> file as a template.</p><div class="language-yaml vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">yaml</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">apiVersion</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">apps/v1</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">kind</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">Deployment</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">metadata</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">  name</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">goliac</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">  namespace</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">goliac</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">spec</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">  progressDeadlineSeconds</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">600</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">  replicas</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">1</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">  selector</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">    matchLabels</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">      app.kubernetes.io/name</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">goliac</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">  template</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">    metadata</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">      labels</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">        app.kubernetes.io/name</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">goliac</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">    spec</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">      containers</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        - </span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">args</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">            - </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">serve</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">          env</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">            - </span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">name</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">GOLIAC_GITHUB_APP_PRIVATE_KEY_FILE</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">              value</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">/etc/goliac/github-app-private-key.pem</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">            - </span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">name</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">GOLIAC_LOGRUS_LEVEL</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">              value</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">warning</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">            - </span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">name</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">GOLIAC_SERVER_GIT_REPOSITORY</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">              value</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;https://github.com/goliac-project/goliac-teams&#39;</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">          envFrom</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">            - </span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">secretRef</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">                name</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">goliac-secrets</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">          image</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">ghcr.io/nzin/goliac</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">          livenessProbe</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">            failureThreshold</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">3</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">            httpGet</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">              path</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">/api/v1/liveness</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">              port</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">http</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">              scheme</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">HTTP</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">            initialDelaySeconds</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">10</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">            periodSeconds</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">20</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">            successThreshold</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">1</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">            timeoutSeconds</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">5</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">          name</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">backend</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">          ports</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">            - </span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">containerPort</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">18000</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">              name</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">http</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">              protocol</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">TCP</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">          readinessProbe</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">            failureThreshold</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">3</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">            httpGet</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">              path</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">/api/v1/readiness</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">              port</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">http</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">              scheme</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">HTTP</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">            initialDelaySeconds</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">10</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">            periodSeconds</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">20</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">            successThreshold</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">1</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">            timeoutSeconds</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">5</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">          resources</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">            limits</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">              cpu</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">500m</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">              memory</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">512Mi</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">            requests</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">              cpu</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">100m</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">              memory</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">256Mi</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">          volumeMounts</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">            - </span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">mountPath</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">/etc/goliac</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">              name</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">goliac-secrets</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">              readOnly</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">true</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">      volumes</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        - </span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">name</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">goliac-secrets</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">          secret</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">            secretName</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">goliac-secrets</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">---</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">apiVersion</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">v1</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">kind</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">Service</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">metadata</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">  name</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">goliac</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">  namespace</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">goliac</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">spec</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">  ports</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    - </span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">name</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">http</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">      port</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">18000</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">      protocol</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">TCP</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">      targetPort</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">http</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">  selector</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">    app.kubernetes.io/name</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">goliac</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">  type</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">ClusterIP</span></span></code></pre></div><h2 id="optional-syncing-users-from-an-external-source" tabindex="-1">Optional: Syncing Users from an external source <a class="header-anchor" href="#optional-syncing-users-from-an-external-source" aria-label="Permalink to &quot;Optional: Syncing Users from an external source&quot;">​</a></h2><p>You can create/edit all your users manually in the <code>users/org/</code> directory. But often you are already managing your users from another source of thruth.</p><p>Goliac can sync users from an external source, This is the <code>usersync</code> section in the <code>goliac.yaml</code> file. There are different plugins:</p><table tabindex="0"><thead><tr><th>Plugin name</th><th>Description</th></tr></thead><tbody><tr><td>noop</td><td>Doing nothing (if you dont want to sync from an external source of truth)</td></tr><tr><td>fromgithubsaml</td><td>If you are using GitHub Enterprise SAML integration</td></tr><tr><td>shellscript</td><td>If you want an ad-hoc sync method, Goliac call the <code>usersync.path</code></td></tr></tbody></table><p>What you need to do:</p><ul><li>edit the <code>goliac.yaml</code> file to specify the right <code>usersync</code> plugin</li><li>by default Goliac will run the sync before applying new changes</li></ul><p>If you want to run the sync manually, you can</p><ul><li>set the GOLIAC_SYNC_USERS_BEFORE_APPLY to false</li><li>run regularly the <code>./goliac syncusers</code> command (cronjob or k8s cronjob) to sync users definition</li></ul><h3 id="protected-users" tabindex="-1">Protected users <a class="header-anchor" href="#protected-users" aria-label="Permalink to &quot;Protected users&quot;">​</a></h3><p>On top of syncing users, if you fear to loose control on users, or you want to ensure that some users are not deleted, you can copy their definition into the <code>org/protected</code> directory.</p><p>As a reminder a user is defined via a yaml file like <code>alice.yaml</code> with the content:</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>apiVersion: v1</span></span>
<span class="line"><span>kind: User</span></span>
<span class="line"><span>name: alice</span></span>
<span class="line"><span>spec:</span></span>
<span class="line"><span>  githubID: alice-myorg</span></span></code></pre></div><h2 id="optional-slack-integration" tabindex="-1">Optional: Slack integration <a class="header-anchor" href="#optional-slack-integration" aria-label="Permalink to &quot;Optional: Slack integration&quot;">​</a></h2><p>If you want to be notified of sync process issues, you can create a Slack application, and configure the <code>GOLIAC_SLACK_TOKEN</code> and <code>GOLIAC_SLACK_CHANNEL</code> environment variables.</p><p>To create a Slack application, you can go to <a href="https://api.slack.com/apps" target="_blank" rel="noreferrer">https://api.slack.com/apps</a>, and <code>Create New App</code>, you can use the following yaml manifest (when asked to import a manifest):</p><div class="language-yaml vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">yaml</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">display_information</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">  name</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">Goliac</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">  description</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">GitHub Organization Leveraged by Infrastructure As Code</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">  background_color</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;#616161&quot;</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">  long_description</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;https://github.com/AlayaCare/goliac</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">\\r</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    \\r</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">    Goliac (GitHub Organization Leveraged by Infrastructure As Code), is a tool to manage your GitHub Organization (users/teams/repositories) via yaml manifests files structured in a GitHub repository</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">\\r</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">    this IAC GitHub repositories can be updated by teams from your organization, but only the repositories they owns</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">\\r</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">    all repositories rules are enforced via a central configuration that only the IT/security team can update (if you are using GitHub Enterprise)</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">\\r</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">    a GitHub App watching this repository and applying any changes&quot;</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">features</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">  bot_user</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">    display_name</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">Goliac</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">    always_online</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">false</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">oauth_config</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">  scopes</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">    bot</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">      - </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">chat:write</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">settings</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">  org_deploy_enabled</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">false</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">  socket_mode_enabled</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">false</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">  token_rotation_enabled</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">false</span></span></code></pre></div><p>You need to</p><ul><li>install the application into your workspace. (You can do it by clicking on the <code>Install App</code> button)</li><li>to set the 2 environments variables (<code>GOLIAC_SLACK_TOKEN</code> and <code>GOLIAC_SLACK_CHANNEL</code>) with the token and the channel name.</li><li>to invite the bot to the channel.</li></ul><h2 id="optional-github-webhook" tabindex="-1">Optional: GitHub webhook <a class="header-anchor" href="#optional-github-webhook" aria-label="Permalink to &quot;Optional: GitHub webhook&quot;">​</a></h2><p>By default Goliac works by polling the state of the goliac teams GitHub repository (by default every 10 minutes). But you can configure a webhook to be notified of changes in your GitHub organization.</p><p>To do so, you need to update the GitHub App configuration:</p><ul><li>in General: <ul><li>enable the active Webhook</li><li>set a webhook secret</li><li>set the webhook URL to be able to reach <code>http://GOLIAC_SERVER_HOST:GOLIAC_SERVER_PORT/webhook</code></li></ul></li><li>in Subscribe to events <ul><li>select <code>Push</code></li></ul></li></ul><p>And you need to configure the Goliac server with</p><ul><li>the <code>GOLIAC_GITHUB_WEBHOOK_SECRET</code> environment variable.</li><li>the <code>GOLIAC_GITHUB_WEBHOOK_HOST</code> environment variable (<code>localhost</code> by default, so you need to change it to something like <code>0.0.0.0</code>)</li><li>the <code>GOLIAC_GITHUB_WEBHOOK_PORT</code> environment variable (<code>18001</code> by default)</li><li>the <code>GOLIAC_GITHUB_WEBHOOK_PATH</code> environment variable (<code>/webhook</code> by default)</li></ul>`,80)]))}const c=i(e,[["render",l]]);export{E as __pageData,c as default};
