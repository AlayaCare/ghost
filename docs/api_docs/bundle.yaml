swagger: '2.0'
info:
  description: >
    goliac is a golang REST application skeleton The base path for all the APIs
    is "/api/v1".
  title: goliac
  version: 1.0.0
tags:
  - name: health
    description: Check if goliac is healthy
x-tagGroups:
  - name: goliac Management
    tags:
      - app
  - name: Health Check
    tags:
      - health
consumes:
  - application/json
produces:
  - application/json
schemes:
  - http
basePath: /api/v1
paths:
  /liveness:
    get:
      tags:
        - health
      operationId: getLiveness
      description: Check if Goliac is healthy
      responses:
        '200':
          description: status of health check
          schema:
            $ref: '#/definitions/health'
        default:
          description: generic error response
          schema:
            $ref: '#/definitions/error'
  /readiness:
    get:
      tags:
        - health
      operationId: getReadiness
      description: Check if Goliac is ready to serve
      responses:
        '200':
          description: status of health check
          schema:
            $ref: '#/definitions/health'
        default:
          description: generic error response
          schema:
            $ref: '#/definitions/error'
  /flushcache:
    post:
      tags:
        - app
      operationId: postFlushCache
      description: Flush the Github remote cache
      responses:
        '200':
          description: cache flushed
        default:
          description: generic error response
          schema:
            $ref: '#/definitions/error'
  /resync:
    post:
      tags:
        - app
      operationId: postResync
      description: Ask to sync again against Github
      responses:
        '200':
          description: resync in progress
        default:
          description: generic error response
          schema:
            $ref: '#/definitions/error'
  /status:
    get:
      tags:
        - app
      operationId: getStatus
      description: Get different statistics on Goliac
      responses:
        '200':
          description: get Goliac statistics
          schema:
            $ref: '#/definitions/status'
        default:
          description: generic error response
          schema:
            $ref: '#/definitions/error'
  /users:
    get:
      tags:
        - app
      operationId: getUsers
      description: Get all users
      responses:
        '200':
          description: get list of users (organization or external)
          schema:
            $ref: '#/definitions/users'
        default:
          description: generic error response
          schema:
            $ref: '#/definitions/error'
  /users/{userID}:
    get:
      tags:
        - app
      operationId: getUser
      parameters:
        - in: path
          name: userID
          description: user name
          required: true
          type: string
          minLength: 1
      description: Get user and associated teams and repos
      responses:
        '200':
          description: get user details especially teams and repositories
          schema:
            $ref: '#/definitions/userDetails'
        default:
          description: generic error response
          schema:
            $ref: '#/definitions/error'
  /teams:
    get:
      tags:
        - app
      operationId: getTeams
      description: Get all teams
      responses:
        '200':
          description: get list of teams
          schema:
            $ref: '#/definitions/teams'
        default:
          description: generic error response
          schema:
            $ref: '#/definitions/error'
  /teams/{teamID}:
    get:
      tags:
        - app
      operationId: getTeam
      parameters:
        - in: path
          name: teamID
          description: team name
          required: true
          type: string
          minLength: 1
      description: Get team and associated users and repos
      responses:
        '200':
          description: get team details especially users and repositories
          schema:
            $ref: '#/definitions/teamDetails'
        default:
          description: generic error response
          schema:
            $ref: '#/definitions/error'
  /repositories:
    get:
      tags:
        - app
      operationId: getRepositories
      description: Get all repositories
      responses:
        '200':
          description: get list of repositories
          schema:
            $ref: '#/definitions/repositories'
        default:
          description: generic error response
          schema:
            $ref: '#/definitions/error'
  /repositories/{repositoryID}:
    get:
      tags:
        - app
      operationId: getRepository
      parameters:
        - in: path
          name: repositoryID
          description: repository slug name
          required: true
          type: string
          minLength: 1
      description: Get repository and associated teams
      responses:
        '200':
          description: get repository details especially teams that have access
          schema:
            $ref: '#/definitions/repositoryDetails'
        default:
          description: generic error response
          schema:
            $ref: '#/definitions/error'
definitions:
  health:
    type: object
    properties:
      status:
        type: string
  users:
    type: array
    items:
      $ref: '#/definitions/user'
  user:
    type: object
    properties:
      name:
        type: string
        x-isnullable: false
      githubid:
        type: string
        x-isnullable: false
      external:
        type: boolean
        x-isnullable: false
        x-omitempty: false
  userDetails:
    type: object
    properties:
      githubid:
        type: string
        x-isnullable: false
      external:
        type: boolean
        x-isnullable: false
        x-omitempty: false
      teams:
        type: array
        items:
          $ref: '#/definitions/team'
      repositories:
        type: array
        items:
          $ref: '#/definitions/repository'
  repository:
    type: object
    properties:
      name:
        type: string
        x-isnullable: false
      public:
        type: boolean
        x-isnullable: false
        x-omitempty: false
      archived:
        type: boolean
        x-isnullable: false
        x-omitempty: false
  repositories:
    type: array
    items:
      $ref: '#/definitions/repository'
  repositoryDetails:
    type: object
    properties:
      name:
        type: string
        x-isnullable: false
      public:
        type: boolean
        x-isnullable: false
        x-omitempty: false
      archived:
        type: boolean
        x-isnullable: false
        x-omitempty: false
      readers:
        type: array
        items:
          type: object
          properties:
            name:
              type: string
              minLength: 1
      writers:
        type: array
        items:
          type: object
          properties:
            name:
              type: string
              minLength: 1
  teams:
    type: array
    items:
      $ref: '#/definitions/team'
  team:
    type: object
    properties:
      name:
        type: string
        x-isnullable: false
      owners:
        type: array
        items:
          type: string
          minLength: 1
      members:
        type: array
        items:
          type: string
          minLength: 1
  teamDetails:
    type: object
    properties:
      name:
        type: string
        x-isnullable: false
      owners:
        type: array
        items:
          type: object
          properties:
            name:
              type: string
              minLength: 1
            githubid:
              type: string
              x-isnullable: false
            external:
              type: boolean
              x-isnullable: false
              x-omitempty: false
      members:
        type: array
        items:
          type: object
          properties:
            name:
              type: string
              minLength: 1
            githubid:
              type: string
              x-isnullable: false
            external:
              type: boolean
              x-isnullable: false
              x-omitempty: false
      repositories:
        type: array
        items:
          $ref: '#/definitions/repository'
  status:
    type: object
    properties:
      lastSyncTime:
        type: string
        minLength: 1
      lastSyncError:
        type: string
      nbUsers:
        type: integer
        x-omitempty: false
      nbUsersExternal:
        type: integer
        x-omitempty: false
      nbTeams:
        type: integer
        x-omitempty: false
      nbRepos:
        type: integer
        x-omitempty: false
  error:
    type: object
    required:
      - message
    properties:
      message:
        type: string
        minLength: 1
