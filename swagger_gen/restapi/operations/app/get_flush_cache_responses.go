// Code generated by go-swagger; DO NOT EDIT.

package app

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	"github.com/Alayacare/goliac/swagger_gen/models"
)

// GetFlushCacheOKCode is the HTTP code returned for type GetFlushCacheOK
const GetFlushCacheOKCode int = 200

/*
GetFlushCacheOK cache flushed

swagger:response getFlushCacheOK
*/
type GetFlushCacheOK struct {
}

// NewGetFlushCacheOK creates GetFlushCacheOK with default headers values
func NewGetFlushCacheOK() *GetFlushCacheOK {

	return &GetFlushCacheOK{}
}

// WriteResponse to the client
func (o *GetFlushCacheOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.Header().Del(runtime.HeaderContentType) //Remove Content-Type on empty responses

	rw.WriteHeader(200)
}

/*
GetFlushCacheDefault generic error response

swagger:response getFlushCacheDefault
*/
type GetFlushCacheDefault struct {
	_statusCode int

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewGetFlushCacheDefault creates GetFlushCacheDefault with default headers values
func NewGetFlushCacheDefault(code int) *GetFlushCacheDefault {
	if code <= 0 {
		code = 500
	}

	return &GetFlushCacheDefault{
		_statusCode: code,
	}
}

// WithStatusCode adds the status to the get flush cache default response
func (o *GetFlushCacheDefault) WithStatusCode(code int) *GetFlushCacheDefault {
	o._statusCode = code
	return o
}

// SetStatusCode sets the status to the get flush cache default response
func (o *GetFlushCacheDefault) SetStatusCode(code int) {
	o._statusCode = code
}

// WithPayload adds the payload to the get flush cache default response
func (o *GetFlushCacheDefault) WithPayload(payload *models.Error) *GetFlushCacheDefault {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get flush cache default response
func (o *GetFlushCacheDefault) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetFlushCacheDefault) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(o._statusCode)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}
